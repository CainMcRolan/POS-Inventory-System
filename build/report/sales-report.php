<?php
require('../../fpdf/fpdf.php');
require('../../helper/connect.php');

session_start();

// Fetch daily sales data
$date = date('Y-m-d'); // Current date in YYYY-MM-DD format
$startOfDay = $date . ' 00:00:00';
$endOfDay = $date . ' 23:59:59';

$query = "SELECT * FROM sale WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";


class PDF extends FPDF
{
   function __construct($orientation = 'P', $unit = 'mm', $size = 'A4')
   {
       parent::__construct($orientation, $unit, $size);
       $this->SetMargins(2, 2, 2); // Set margins to zero
   }
    // Page header
    function Header()
    {
        // Title
        $this->SetFont('Arial', 'B', 6);
        $this->Cell(0, 2, 'CRT Minimart Sales Report', 0, 1, 'C');
        $this->Ln(1);
        // Date and time
        $this->SetFont('Arial', '', 5);
        $this->Cell(0, 2, 'Date: ' .$_SESSION['$selected_date'], 0, 1, 'C');
        $this->Cell(0, 2, 'Time: ' . date('H:i:s'), 0, 1, 'C');
        // Generated by
        $this->Cell(0, 2, 'Report Generated by: Admin', 0, 1, 'C');
        $this->Ln(2);
    }

    // Sales summary
    function SalesSummary()
    {
        global $connection;
        $date = $_SESSION['$selected_date']; 
        $startOfDay = $date . ' 00:00:00';
        $endOfDay = $date . ' 23:59:59';
        
        // Fetch total sales
        $query_total_sales = "SELECT SUM(cash_received) AS total_sales FROM sale  WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
        $result_total_sales = mysqli_query($connection, $query_total_sales);
        $total_sales_row = mysqli_fetch_assoc($result_total_sales);
        $total_sales = $total_sales_row['total_sales'];
    
        // Fetch number of transactions
        $query_num_transactions = "SELECT COUNT(*) AS num_transactions FROM sale  WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
        $result_num_transactions = mysqli_query($connection, $query_num_transactions);
        $num_transactions_row = mysqli_fetch_assoc($result_num_transactions);
        $num_transactions = $num_transactions_row['num_transactions'];
    
        // Fetch total sold item quantity
        $query_total_sold_items = "SELECT SUM(sold) AS total_sold_items FROM sale  WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
        $result_total_sold_items = mysqli_query($connection, $query_total_sold_items);
        $total_sold_items_row = mysqli_fetch_assoc($result_total_sold_items);
        $total_sold_items = $total_sold_items_row['total_sold_items'];
    
        $this->SetFont('Arial', 'B', 5);
        $this->Cell(0, 2, 'Sales Summary:', 0, 1, 'C');
    
        $this->SetFont('Arial', '', 5);
        $this->Cell(0, 2, 'Total Sales: $' . number_format($total_sales, 2), 0, 1, 'C');
        $this->Cell(0, 2, 'Number of Transactions: ' . $num_transactions, 0, 1, 'C');
        $this->Cell(0, 2, 'Total Sold Items: ' . $total_sold_items, 0, 1, 'C');
        $this->Ln(2);
    }
    // Detailed sales breakdown
    function DetailedSalesBreakdown() {
      global $connection;

      $date = $_SESSION['$selected_date']; 
      $startOfDay = $date . ' 00:00:00';
      $endOfDay = $date . ' 23:59:59';

      $this->SetFont('Arial', 'B', 5);
      $this->Cell(0, 2, 'Detailed Sales Breakdown:', 0, 1, 'C');

      // Table headers
      $headers = array('Category', 'Qty', 'Total');
      $this->SetFont('Arial', '', 5);
      $this->Cell(18, 2, $headers[0], 1, 0, 'C');
      $this->Cell(14, 2, $headers[1], 1, 0, 'C');
      $this->Cell(20, 2, $headers[2], 1, 0, 'C');
      $this->Ln();

      // Fetch unique categories
      $query_categories = "SELECT DISTINCT category FROM sale WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
      $result_categories = mysqli_query($connection, $query_categories);
      
      // Prepare data array
      $data = array();

      while ($row_category = mysqli_fetch_assoc($result_categories)) {
         $category = $row_category['category'];

         // Fetch total quantity sold for this category
         $query_qty = "SELECT SUM(sold) AS total_qty FROM sale WHERE category = '$category' AND date BETWEEN '$startOfDay' AND '$endOfDay'";
         $result_qty = mysqli_query($connection, $query_qty);
         $row_qty = mysqli_fetch_assoc($result_qty);
         $total_qty = $row_qty['total_qty'];

         // Fetch total cash received for this category
         $query_total = "SELECT SUM(cash_received) AS total_cash FROM sale WHERE category = '$category' AND date BETWEEN '$startOfDay' AND '$endOfDay'";
         $result_total = mysqli_query($connection, $query_total);
         $row_total = mysqli_fetch_assoc($result_total);
         $total_cash = $row_total['total_cash'];

         // Add to data array
         $data[] = array($category, $total_qty, '$' . number_format($total_cash, 2));
      }

      // Table data
      $this->SetFont('Arial', '', 5);
      foreach ($data as $row) {
         $this->Cell(18, 2, $row[0], 1, 0, 'C');
         $this->Cell(14, 2, $row[1], 1, 0, 'C');
         $this->Cell(20, 2, $row[2], 1, 0, 'C');
         $this->Ln();
      }
      $this->Ln(2);
   }

    // Itemized sales
    function ItemizedSales(){
      global $connection;

      $date = $_SESSION['$selected_date']; 
      $startOfDay = $date . ' 00:00:00';
      $endOfDay = $date . ' 23:59:59';

      $this->SetFont('Arial', 'B', 5);
      $this->Cell(0, 2, 'Itemized Sales:', 0, 1, 'C');

      // Table headers
      $headers = array('Item', 'Qty', 'Total');
      $this->SetFont('Arial', '', 5);
      $this->Cell(18, 2, $headers[0], 1, 0, 'C');
      $this->Cell(14, 2, $headers[1], 1, 0, 'C');
      $this->Cell(20, 2, $headers[2], 1, 0, 'C');
      $this->Ln();

      // Fetch unique item names
      $query_items = "SELECT DISTINCT name FROM sale WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
      $result_items = mysqli_query($connection, $query_items);
      
      // Prepare data array
      $data = array();

      while ($row_item = mysqli_fetch_assoc($result_items)) {
         $item_name = $row_item['name'];

         // Fetch total quantity sold for this item
         $query_qty = "SELECT SUM(sold) AS total_qty FROM sale WHERE name = '$item_name' AND date BETWEEN '$startOfDay' AND '$endOfDay'";
         $result_qty = mysqli_query($connection, $query_qty);
         $row_qty = mysqli_fetch_assoc($result_qty);
         $total_qty = $row_qty['total_qty'];

         // Fetch total cash received for this item
         $query_total = "SELECT SUM(cash_received) AS total_cash FROM sale WHERE name = '$item_name' AND date BETWEEN '$startOfDay' AND '$endOfDay'";
         $result_total = mysqli_query($connection, $query_total);
         $row_total = mysqli_fetch_assoc($result_total);
         $total_cash = $row_total['total_cash'];

         // Add to data array
         $data[] = array($item_name, $total_qty, '$' . number_format($total_cash, 2));
      }

      // Table data
      $this->SetFont('Arial', '', 5);
      foreach ($data as $row) {
         $this->Cell(18, 2, $row[0], 1, 0, 'C');
         $this->Cell(14, 2, $row[1], 1, 0, 'C');
         $this->Cell(20, 2, $row[2], 1, 0, 'C');
         $this->Ln();
      }
      $this->Ln(2);
   }

   function cashierReport(){
      global $connection;
      $date = $_SESSION['$selected_date']; 
      $startOfDay = $date . ' 00:00:00';
      $endOfDay = $date . ' 23:59:59';

      $this->SetFont('Arial', 'B', 5);
      $this->Cell(0, 2, 'Cashier Report:', 0, 1, 'C');

      // Table headers
      $headers = array('Cashier', 'Item', 'Qty', 'Total');
      $this->SetFont('Arial', '', 5);
      $this->Cell(10, 2, $headers[0], 1, 0, 'C');
      $this->Cell(20, 2, $headers[1], 1, 0, 'C');
      $this->Cell(10, 2, $headers[2], 1, 0, 'C');
      $this->Cell(12, 2, $headers[3], 1, 0, 'C');
      $this->Ln();

      // Fetch unique cashier names
      $query_cashiers = "SELECT DISTINCT cashier_name FROM sale WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
      $result_cashiers = mysqli_query($connection, $query_cashiers);

      // Prepare data array
      $data = array();

      while ($row_cashier = mysqli_fetch_assoc($result_cashiers)) {
         $cashier_name = $row_cashier['cashier_name'];

         // Fetch unique item names sold by this cashier
         $query_items = "SELECT DISTINCT name FROM sale WHERE cashier_name = '$cashier_name' AND date BETWEEN '$startOfDay' AND '$endOfDay'";
         $result_items = mysqli_query($connection, $query_items);

         while ($row_item = mysqli_fetch_assoc($result_items)) {
               $item_name = $row_item['name'];

               // Fetch total quantity sold for this item by this cashier
               $query_qty = "SELECT SUM(sold) AS total_qty FROM sale WHERE name = '$item_name' AND cashier_name = '$cashier_name' AND date BETWEEN '$startOfDay' AND '$endOfDay'";
               $result_qty = mysqli_query($connection, $query_qty);
               $row_qty = mysqli_fetch_assoc($result_qty);
               $total_qty = $row_qty['total_qty'];

               // Fetch total cash received for this item by this cashier
               $query_total = "SELECT SUM(cash_received) AS total_cash FROM sale WHERE name = '$item_name' AND cashier_name = '$cashier_name' AND date BETWEEN '$startOfDay' AND '$endOfDay'";
               $result_total = mysqli_query($connection, $query_total);
               $row_total = mysqli_fetch_assoc($result_total);
               $total_cash = $row_total['total_cash'];

               // Add to data array
               $data[] = array($cashier_name, $item_name, $total_qty, '$' . number_format($total_cash, 2));
         }
      }

      // Table data
      $this->SetFont('Arial', '', 5);
      foreach ($data as $row) {
         $this->Cell(10, 2, $row[0], 1, 0, 'C');
         $this->Cell(20, 2, $row[1], 1, 0, 'C');
         $this->Cell(10, 2, $row[2], 1, 0, 'C');
         $this->Cell(12, 2, $row[3], 1, 0, 'C');
         $this->Ln();
      }
      $this->Ln(2);
   }


    // Cash drawer summary

    function CashDrawerSummary() {
      global $connection;
      $date = $_SESSION['$selected_date']; 
      $startOfDay = $date . ' 00:00:00';
      $endOfDay = $date . ' 23:59:59';
      
      // Fetch total cash
      $query_total_cash = "SELECT SUM(cash) AS total_cash FROM cash WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
      $result_total_cash = mysqli_query($connection, $query_total_cash);
      $total_cash_row = mysqli_fetch_assoc($result_total_cash);
      $total_cash = $total_cash_row['total_cash'];

      // Fetch number of transactions
      $query_num_transactions = "SELECT COUNT(*) AS num_transactions FROM cash WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
      $result_num_transactions = mysqli_query($connection, $query_num_transactions);
      $num_transactions_row = mysqli_fetch_assoc($result_num_transactions);
      $num_transactions = $num_transactions_row['num_transactions'];

      // Fetch total pull out
      $query_total_pull_out = "SELECT SUM(cash_pull_out) AS total_pull_out FROM cash WHERE date BETWEEN '$startOfDay' AND '$endOfDay'";
      $result_total_pull_out = mysqli_query($connection, $query_total_pull_out);
      $total_pull_out_row = mysqli_fetch_assoc($result_total_pull_out);
      $total_pull_out = $total_pull_out_row['total_pull_out'];

      $this->SetFont('Arial', 'B', 5);
      $this->Cell(0, 2, 'Cash Drawer Summary:', 0, 1, 'C');

      $this->SetFont('Arial', '', 5);
      $this->Cell(0, 2, 'Opening Cash:   $0', 0, 1, 'C');
      $this->Cell(0, 2, 'Total Cash: $' . number_format($total_cash, 2), 0, 1, 'C');
      $this->Cell(0, 2, 'Number of Transactions: ' . $num_transactions, 0, 1, 'C');
      $this->Cell(0, 2, 'Total Pull Out: $' . number_format($total_pull_out, 2), 0, 1, 'C');
      $this->Ln(2);
   }

    // Product report
    function ProductReport()
    {
        global $connection;
        $this->SetFont('Arial', 'B', 5);
        $this->Cell(0, 2, 'Product Report:', 0, 1, 'C');
        // Fetch product data
        $query = "SELECT * FROM product";
        $result = mysqli_query($connection, $query);
        $count = 0;
        while ($row = mysqli_fetch_assoc($result)) {
            $count++;
            $this->SetFont('Arial', 'B', 5);
            $this->Cell(30, 2, "Product $count", 0, 1, 'R');
            $this->SetFont('Arial', '', 5);
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Product Code: {$row['code']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Name: {$row['name']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Category: {$row['category']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Price: {$row['price']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Stock: {$row['current_stock']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Physical Count: {$row['physical_count']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Delivery: {$row['delivery']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Transfer: {$row['transfer']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Wasteges: {$row['wasteges']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Pull Out: {$row['pull_out']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Returns: {$row['returns']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Variance: {$row['variance']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Description: {$row['description']}", 1, 1, 'C');
            $this->SetX(($this->w - 30) / 2); 
            $this->Cell(30, 2, "Date Added: {$row['date_added']}", 1, 1, 'C');
            $this->Ln(4);
        }
        $this->Ln(2);
    }

    // Thank you message
    function ThankYouMessage()
    {
        $this->SetFont('Arial', 'I', 4);
        $this->Cell(0, 2, 'Thank you for your hard work!', 0, 1, 'C');
        $this->Cell(0, 2, 'For inquiries, contact: +956-143-4976', 0, 1, 'C');
        $this->Ln(1);
    }
}

// Create a new PDF instance
$pdf = new PDF('P','mm',array(83, 55)); // Adjusted width and height for vertical orientation
$pdf->AddPage();

// Add sections to the PDF
$pdf->SalesSummary();
$pdf->DetailedSalesBreakdown();
$pdf->ItemizedSales();
$pdf->ThankYouMessage();

// Output the PDF
$pdf->Output('I', 'Daily_Terminal_Report_' . $date . '.pdf');
?>
